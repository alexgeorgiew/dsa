#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
    int n,k;
    int maxclients=0;
    vector<pair<long int,int>> v;
    
    cin>>n;
    cin>>k;
    for(int i=0;i<k;i++)
    {
        v.push_back(pair<long int,int>(0,0));
    }
    long int when,howlong;
    for(int i=0;i<n;i++)
    {
        cin>>when;
        cin>>howlong;
        if(v[i%k].first<=when)
        {
            v[i%k].first=when+howlong;
            v[i%k].second++;
            if(v[i%k].second>maxclients)maxclients=v[i%k].second;
        }
        else
        {
            int start=i%k+1;
            bool found=false;
            while(start<k && found==false)
            {
                if(v[start].first<=when)
                {
                    found=true;
                     v[start].first=when+howlong;
                    v[start].second++;
                  if(v[start].second>maxclients)maxclients=v[start].second;
                }
                else
                {
                    start++;
                }
            }
            if(found==false)
            {
                start=0;
                while(start<i%k && found==false)
               {
                  if(v[start].first<=when)
                   {
                    found=true;
                     v[start].first=when+howlong;
                    v[start].second++;
                  if(v[start].second>maxclients)maxclients=v[start].second;
                   }
                  else
                  {
                    start++;
                  }
               }
            }
           
        }
    }
   // cout<<maxclients<<'\n';
    for(int i=0;i<k;i++)
    {
        if(v[i].second==maxclients)cout<<i<<" ";
        //cout<<v[i].second<<" ";
    }
    return 0;
}
